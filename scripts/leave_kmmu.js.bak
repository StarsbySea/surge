/*

[Script]
# > 易班假条(xg.kmmu.edu.c(n|om))
易班假条 = type=http-response, pattern=^https?:\/\/xg\.kmmu\.edu.cn\/KmmcXG\/webapi\/api\/Leave\/AllLeaveManage(_Edit)?\?LoginStatus=.*, requires-body=1, max-size=-1, script-path=https://raw.githubusercontent.com/chiupam/surge/main/scripts/leave_kmmu.js

[Mitm]
hostname = %APPEND% xg.kmmu.edu.c(n|om)

git: https://github.com/chiupam/surge/blob/main/scripts/leave_kmmu.js
raw: https://raw.githubusercontent.com/chiupam/surge/main/scripts/leave_kmmu.js
plugin: https://raw.githubusercontent.com/chiupam/surge/main/Loon/Leave.plugin
sgmoudule: https://raw.githubusercontent.com/chiupam/surge/main/Surge/Leave.sgmodule

*/

var $ = Env()
var Url = $request.url
var Body = JSON.parse($response.body)
const isLeave = $.read('isLeave') || 'true'
if (isLeave == 'false') {
  Body = JSON.parse($response.body)
} else {
  var newDate = new Date()
  var Year = newDate.getFullYear()
  var Month = newDate.getMonth() + 1
  var Day = newDate.getDate()
  var Hour = newDate.getHours()
  var Hours = Hour + 1
  if (Hours < 10) {
    Hours = 8
    auto_end_date = Day + 1
  } else {
    if (Hours >= 11) {
      auto_begin_hours = Hour - 3
      var auto_begin_hours = ('0' + auto_begin_hours).slice(-2)
    }
    auto_end_date = Day
  }
  var preset_begin_date = ('0' + Day).slice(-2)
  var preset_end_date = ('0' + auto_end_date).slice(-2)
  var current_hours =  ('0' + Hours).slice(-2)
  const begin_date = $.read('begin_date') || preset_begin_date
  const end_date = $.read('end_date') || preset_end_date
  const begin_hours = $.read('begin_hours') || auto_begin_hours || '08'
  const end_hours = $.read('end_hours') || current_hours
  const LeaveType = $.read('LeaveType') || '事假'
  const LeaveThing = $.read('LeaveThing') || '有事外出'
  const WithNumNo = $.read('WithNumNo') || '1'
  const OutAddress = $.read('OutAddress') || ''
  const StudentName = $.read('StudentName') || ''
  const StudentTel = $.read('StudentTel') || ''
  const ParentName = $.read('ParentName') || ''
  const ParentTel = $.read('ParentTel') || ''
  const Vehicle = $.read('Vehicle') || '汽车'
  if ((begin_date) * 1 <= (end_date) * 1) {
    begin_month = Month
    end_month = Month
    var LeaveNumNo = ((end_date) * 1 - (begin_date) * 1 + (end_hours) * 1 / 24 - (begin_hours) * 1 / 24).toFixed(2)
  } else {
    begin_month = Month
    end_month = Month + 1
    var month_total_days = new Date(Year, Month, 0).getDate()
    var LeaveNumNo = ((month_total_days) * 1 + (end_date) * 1 - (begin_date) * 1 + (end_hours) * 1 / 24 - (begin_hours) * 1 / 24).toFixed(2)
  }
  const BeginMonth = ('0' + begin_month).slice(-2)
  const EndMonth = ('0' + end_month).slice(-2)
  const BeginDate = ('0' + begin_date).slice(-2)
  const EndDate = ('0' + end_date).slice(-2)
  const LeaveBeginTime = ('0' + begin_hours).slice(-2)
  const LeaveEndTime = ('0' + end_hours).slice(-2)
  const LeaveBeginDate = Year + "-" + BeginMonth + "-" + BeginDate
  const LeaveEndDate = Year + "-" + EndMonth + "-" + EndDate
  const ID = Math.random().toString().substr(2, 4)
  if (Url.indexOf('_Edit') == -1) {
    Body= {
      "AllLeaveManages": [{
        "LeaveType": LeaveType,
        "WithNumNo": WithNumNo,
        "OutAddress": OutAddress, 
        "FDYThing": "同意",
        "Status": "假期中",
        "StatusName": "辅导员审核通过",
        "ID": ID,
        "LeaveBeginDate": LeaveBeginDate,
        "LeaveBeginTime": LeaveBeginTime,
        "LeaveEndDate": LeaveEndDate,
        "LeaveEndTime": LeaveEndTime,
        "LeaveNumNo": LeaveNumNo
      }],
      "IsLeave": 1
    }
  } else {
    Body= {
      "LeaveType": LeaveType,
      "LeaveThing": LeaveThing,
      "OutAddress": OutAddress,
      "OutName": StudentName,
      "OutMoveTel": StudentTel,
      "OutTel": "",
      "Relation": "本人",
      "StuMoveTel": StudentTel,
      "StuOtherTel": "",
      "ParentContacts": ParentName,
      "ParentTel": ParentTel,
      "LeaveBeginDate": LeaveBeginDate,
      "Inputdate": LeaveBeginDate,
      "GoDate": LeaveBeginDate,
      "LeaveEndDate": LeaveEndDate,
      "BackDate": LeaveEndDate,
      "LeaveBeginTime": LeaveBeginTime,
      "GoTime": LeaveBeginTime,
      "LeaveEndTime": LeaveEndTime,
      "BackTime": LeaveEndTime,
      "GoVehicle": Vehicle,
      "BackVehicle": Vehicle,
      "StuName": StudentName,
      "WithNumNo": WithNumNo,
      "LeaveNumNo": LeaveNumNo,
      "GoOut": "1",
      "studentId": "202010001",
      "ID": ID,
      "Status": "假期中",
      "FDYThing": "同意"
    }
  }    
}
$.done({body: JSON.stringify(Body)})

function Env() {
  // NE = typeof module && !!module.exports != "undefined"
  LN = typeof $loon != "undefined"
  SG = typeof $httpClient != "undefined" && !LN
  QX = typeof $task != "undefined"
  read = (key) => {
    if (LN || SG) return $persistentStore.read(key)
    if (QX) return $prefs.valueForKey(key)
  }
  write = (key, val) => {
    if (LN || SG) return $persistentStore.write(key, val); 
    if (QX) return $prefs.setValueForKey(key, val)
  }
  notice = (title, subtitle, message, url) => {
    if (LN) $notification.post(title, subtitle, message, url)
    if (SG) $notification.post(title, subtitle, message, { url: url })
    if (QX) $notify(title, subtitle, message, { "open-url": url })
  }
  get = (url, cb) => {
    if (LN || SG) {$httpClient.get(url, cb)}
    if (QX) {url.method = 'GET'; $task.fetch(url).then((resp) => cb(null, {}, resp.body))}
  }
  post = (url, cb) => {
    if (LN || SG) {$httpClient.post(url, cb)}
    if (QX) {url.method = 'POST'; $task.fetch(url).then((resp) => cb(null, {}, resp.body))}
  }
  put = (url, cb) => {
    if (LN || SG) {$httpClient.put(url, cb)}
    if (QX) {url.method = 'PUT'; $task.fetch(url).then((resp) => cb(null, {}, resp.body))}
  }
  log = (message) => console.log(message)
  done = (value = {}) => {$done(value)}
  return { LN, SG, QX, read, write, notice, get, post, put, log, done }
}
